<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>de.alpharogroup</groupId>
		<artifactId>mvn-java-parent</artifactId>
		<version>2.0.0</version>
		<relativePath></relativePath>
	</parent>

	<artifactId>address-book-data</artifactId>
	<packaging>pom</packaging>
	<version>3.1.0</version>
	<inceptionYear>2015</inceptionYear>

	<name>${project.artifactId}</name>

	<description>
		Parent project that holds module projects for the persistence of address data.
	</description>

	<url>https://github.com/lightblueseas/address-book-data</url>

	<scm>
		<connection>scm:git:git:@github.com:lightblueseas/address-book-data.git</connection>
		<developerConnection>scm:git:git@github.com:lightblueseas/address-book-data.git</developerConnection>
		<url>git:@github.com:lightblueseas/address-book-data.git</url>
	</scm>

	<ciManagement>
		<system>travis-ci</system>
		<url>https://travis-ci.org/lightblueseas/address-book-data</url>
	</ciManagement>

	<issueManagement>
		<system>github</system>
		<url>https://github.com/lightblueseas/address-book-data/issues</url>
	</issueManagement>

	<modules>
		<module>address-book-entities</module>
		<module>address-book-business</module>
		<module>address-book-init</module>
	</modules>

	<properties>
		<!-- JAVAX.INJECT version -->
		<javax.inject.version>1</javax.inject.version>
		<!-- HIBERNATE versions -->
		<hibernate.version>4.3.8.Final</hibernate.version>
		<cglib.version>2.2.2</cglib.version>
		<!-- SPRING versions -->
		<spring.version>4.1.5.RELEASE</spring.version>
		<!-- DB DRIVER version -->
		<postgresql.version>9.2-1003-jdbc4</postgresql.version>
		<!-- JAULP versions -->
		<jaulp.core.version>4.2.0</jaulp.core.version>
		<jaulp.lang.version>${jaulp.core.version}</jaulp.lang.version>
		<jaulp.xml.version>${jaulp.core.version}</jaulp.xml.version>
		<!-- EXTERNAL LIBRARIES versions -->
		<dozer.version>5.5.1</dozer.version>
		<!-- REST-API versions -->
		<javax.ws.rs-api.version>2.0.1</javax.ws.rs-api.version>
		
		<hibernate3-maven-plugin.version>2.2</hibernate3-maven-plugin.version>
		<hibernate4-maven-plugin.version>1.0.5</hibernate4-maven-plugin.version>
		<sql-maven-plugin.version>1.5</sql-maven-plugin.version>
		<m2e.lifecycle-mapping.version>1.0.0</m2e.lifecycle-mapping.version>
		<exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
		<properties-maven-plugin.version>1.0-alpha-2</properties-maven-plugin.version>
	</properties>

	<dependencies>
		<!-- LOMBOK DEPENDENCIES -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

	</dependencies>

	<build> 	
		
		<pluginManagement>

			<plugins>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>${properties-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>initialize</phase>
							<goals>
								<goal>read-project-properties</goal>
							</goals>
							<configuration>
								<files>
									<file>src/main/resources/jdbc.properties</file>
								</files>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>hibernate3-maven-plugin</artifactId>
					<version>${hibernate3-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>process-classes</phase>
							<goals>
								<goal>hbm2ddl</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<!-- JDBC DEPENDENCIES -->
						<dependency>
							<groupId>org.postgresql</groupId>
							<artifactId>postgresql</artifactId>
							<version>${postgresql.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>${sql-maven-plugin.version}</version>
					<!--jar file that has the jdbc driver -->
					<dependencies>
						<!-- JDBC DEPENDENCIES -->
						<dependency>
							<groupId>org.postgresql</groupId>
							<artifactId>postgresql</artifactId>
							<version>${postgresql.version}</version>
						</dependency>

					</dependencies>
					<executions>
						<execution>
							<id>create-data</id>
							<phase>process-test-resources</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<orderFile>ascending</orderFile>
								<fileset>
									<basedir>${basedir}</basedir>
									<includes>
										<include>src/main/resources/dll/inserts/initializeDatabase.sql</include>
									</includes>
								</fileset>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--This plugin is used to execute java classes with a main method. -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>java</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${m2e.lifecycle-mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>hibernate3-maven-plugin</artifactId>
										<versionRange>[${hibernate3-maven-plugin.version},)</versionRange>
										<goals>
											<goal>hbm2ddl</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>de.juplo</groupId>
										<artifactId>hibernate4-maven-plugin</artifactId>
										<versionRange>[${hibernate4-maven-plugin.version},)</versionRange>
										<goals>
											<goal>export</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>

		</pluginManagement>
		
	
	
		<plugins>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>

		</plugins>
	</build>

</project>